import { NextApiRequest, NextApiResponse } from "next";
import Head from "next/head";
import CreatePost from "../components/createPost/CreatePost";
import HomePageNavbar from "../components/homePageNavbar/HomePageNavbar";
import HomePageSidebar from "../components/homePageSidebar/HomePageSidebar";
import PostCard from "../components/postCard/PostCard";
import homeStyles from "../styles/Home.module.css";
import connectToMongoDb from "../lib/mongodb";
import { cursorToDoc } from "../helpers/cursorToDoc";
import { Post } from "../interfaces/Common.interface";
import { useDispatch, useSelector } from "react-redux";
import { useEffect } from "react";
import { refresh } from "../features/postSlice";
import { RootState } from "../store";

export default function Home({ posts: newPosts }: { posts: Post[] }) {
  const posts = useSelector((state: RootState) => state.postSlice);
  const dispatch = useDispatch();

  useEffect(() => {
    dispatch(refresh({ newPosts }));
  }, []);

  return (
    <>
      <Head>
        <title>Dev Net</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <HomePageSidebar />
      <div className={homeStyles.homePostsSection}>
        <CreatePost />
        {posts.map((post) => (
          <PostCard key={post._id} details={post} />
        ))}
      </div>
      <HomePageNavbar />
    </>
  );
}

export async function getServerSideProps({
  req,
  res,
}: {
  req: NextApiRequest;
  res: NextApiResponse;
}) {
  const connection = await (await connectToMongoDb).connect();
  try {
    const result = connection
      .db()
      .collection("posts")
      .find({})
      .sort({ timestamp: -1 });
    return {
      props: {
        posts: await cursorToDoc(result),
      },
    };
  } catch (err) {
    return {
      props: {
        posts: [],
      },
    };
  } finally {
    connection.close();
  }
}
